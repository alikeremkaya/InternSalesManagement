<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddLeave" xml:space="preserve">
    <value>Add Leave</value>
  </data>
  <data name="AddNew" xml:space="preserve">
    <value>Add New</value>
  </data>
  <data name="AddNewEmployee" xml:space="preserve">
    <value>Add New Employee</value>
  </data>
  <data name="Address" xml:space="preserve">
    <value>Address</value>
  </data>
  <data name="Address cannot exceed 128 characters" xml:space="preserve">
    <value>Address cannot exceed 128 characters</value>
  </data>
  <data name="AddressIsNotEmpty" xml:space="preserve">
    <value>The Address Field is Required</value>
  </data>
  <data name="AdminProfile" xml:space="preserve">
    <value>Admin Profile</value>
  </data>
  <data name="Advance" xml:space="preserve">
    <value>Advance</value>
  </data>
  <data name="AdvanceDate" xml:space="preserve">
    <value>Advance Date</value>
  </data>
  <data name="AdvanceDateIsNotEmpty" xml:space="preserve">
    <value>The Advance Date Field is Required</value>
  </data>
  <data name="Advances" xml:space="preserve">
    <value>Advances</value>
  </data>
  <data name="Amount" xml:space="preserve">
    <value>Amount</value>
  </data>
  <data name="AmountIsNotEmpty" xml:space="preserve">
    <value>The Amount Field is Required</value>
  </data>
  <data name="BackToList" xml:space="preserve">
    <value>Back To List</value>
  </data>
  <data name="ChangePassword" xml:space="preserve">
    <value>Change Password</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="Companies" xml:space="preserve">
    <value>Companies</value>
  </data>
  <data name="Company" xml:space="preserve">
    <value>Company</value>
  </data>
  <data name="CompanyIsNotEmpty" xml:space="preserve">
    <value>The Compnay Field is required</value>
  </data>
  <data name="CompanyName" xml:space="preserve">
    <value>Company Name</value>
  </data>
  <data name="CompanyNameIsNotEmpty" xml:space="preserve">
    <value>The Company Name field is required</value>
  </data>
  <data name="ConfirmNewPassword" xml:space="preserve">
    <value>Confirm New Password</value>
  </data>
  <data name="Create" xml:space="preserve">
    <value>Create</value>
  </data>
  <data name="CreateAdvance" xml:space="preserve">
    <value>Create Advance</value>
  </data>
  <data name="CreateEmployee" xml:space="preserve">
    <value>Create Employee</value>
  </data>
  <data name="CreateManager" xml:space="preserve">
    <value>Create Manager</value>
  </data>
  <data name="CreateNewCompany" xml:space="preserve">
    <value>Create New Company</value>
  </data>
  <data name="CreateNewEmployee" xml:space="preserve">
    <value>Create New Employee</value>
  </data>
  <data name="CreateNewLeave" xml:space="preserve">
    <value>Create New Leave</value>
  </data>
  <data name="CreateNewLeaveType" xml:space="preserve">
    <value>Create New Leave Type</value>
  </data>
  <data name="CreateNewManager" xml:space="preserve">
    <value>Create New Manager</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="DescriptionCannotExceed" xml:space="preserve">
    <value>Description field cannot exceed 250 characters.</value>
  </data>
  <data name="Details" xml:space="preserve">
    <value>Details</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="EmailIsNotEmpty" xml:space="preserve">
    <value>The Email field is required</value>
  </data>
  <data name="Employee" xml:space="preserve">
    <value>Employee</value>
  </data>
  <data name="EmployeeName" xml:space="preserve">
    <value>EmployeeName</value>
  </data>
  <data name="Employees" xml:space="preserve">
    <value>Employees</value>
  </data>
  <data name="EN" xml:space="preserve">
    <value>English</value>
  </data>
  <data name="EndDate" xml:space="preserve">
    <value>EndDate</value>
  </data>
  <data name="FirstName" xml:space="preserve">
    <value>First Name</value>
  </data>
  <data name="FirstNameIsNotEmpty" xml:space="preserve">
    <value>The First Name field is required</value>
  </data>
  <data name="Image" xml:space="preserve">
    <value>Image</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="LastName" xml:space="preserve">
    <value>Last Name</value>
  </data>
  <data name="LastNameIsNotEmpty" xml:space="preserve">
    <value>The Last Name field is required</value>
  </data>
  <data name="Leave" xml:space="preserve">
    <value>Leave</value>
  </data>
  <data name="Leaves" xml:space="preserve">
    <value>Leaves</value>
  </data>
  <data name="LeaveType" xml:space="preserve">
    <value>Leave Type</value>
  </data>
  <data name="LeaveTypes" xml:space="preserve">
    <value>Leave Types</value>
  </data>
  <data name="Logout" xml:space="preserve">
    <value>Logout</value>
  </data>
  <data name="Manager" xml:space="preserve">
    <value>Manager</value>
  </data>
  <data name="ManagerList" xml:space="preserve">
    <value>Manager List</value>
  </data>
  <data name="ManagerProfile" xml:space="preserve">
    <value>Manager Profile</value>
  </data>
  <data name="Managers" xml:space="preserve">
    <value>Managers</value>
  </data>
  <data name="MaxLength128" xml:space="preserve">
    <value>This Field must have a maximum of 128 characters.</value>
  </data>
  <data name="Maxlength13" xml:space="preserve">
    <value>This Field must have a maximum of 13 characters.</value>
  </data>
  <data name="NewImage" xml:space="preserve">
    <value>New Image</value>
  </data>
  <data name="NoImagePleaseAdd" xml:space="preserve">
    <value>No Image Please Add</value>
  </data>
  <data name="OldPassword" xml:space="preserve">
    <value>Old Password</value>
  </data>
  <data name="Operations" xml:space="preserve">
    <value>Operations</value>
  </data>
  <data name="PasswordIsNotEmpty" xml:space="preserve">
    <value>The Password field is required.</value>
  </data>
  <data name="Phone number is required" xml:space="preserve">
    <value>Phone number is required</value>
  </data>
  <data name="Phone number must be exactly 11 digits" xml:space="preserve">
    <value>Phone number must be exactly 11 digits</value>
  </data>
  <data name="Phone number must be numeric and exactly 11 digits" xml:space="preserve">
    <value />
  </data>
  <data name="PhoneNumber" xml:space="preserve">
    <value>Phone Number</value>
  </data>
  <data name="PhoneNumberIsNotEmpty" xml:space="preserve">
    <value>The Phone Number Field is Required</value>
  </data>
  <data name="PleaseEnterAValidEmailAddress" xml:space="preserve">
    <value>Please Enter a Valid Email Address</value>
  </data>
  <data name="Profile" xml:space="preserve">
    <value>Profile</value>
  </data>
  <data name="reCAPTCHAIsNotEmpty" xml:space="preserve">
    <value>The reCAPTCHA Name field is required</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="StartDate" xml:space="preserve">
    <value>StartDate</value>
  </data>
  <data name="TR" xml:space="preserve">
    <value>Turkish</value>
  </data>
  <data name="TypeIsNotEmpty" xml:space="preserve">
    <value>Leave type is required</value>
  </data>
  <data name="Update" xml:space="preserve">
    <value>Update</value>
  </data>
  <data name="UpdateAdvance" xml:space="preserve">
    <value>Update Advance</value>
  </data>
  <data name="UpdateCompany" xml:space="preserve">
    <value>Update Company</value>
  </data>
  <data name="UpdateEmployee" xml:space="preserve">
    <value>Update Employee</value>
  </data>
  <data name="UpdateLeave" xml:space="preserve">
    <value>Update Leave</value>
  </data>
  <data name="UpdateLeaveType" xml:space="preserve">
    <value>Update Leave Type</value>
  </data>
  <data name="UpdateManager" xml:space="preserve">
    <value>Update Manager</value>
  </data>
  <data name="UpdatePassword" xml:space="preserve">
    <value>Update Password</value>
  </data>
</root>